{
    title: 'Naming',
    description: 'Naming conventions are hugely important to maintainability and readability. This guide recommends naming conventions for the file name and the symbol name.',
    rules: [
        { 
            title: 'General Naming Guidelines',
            source: 'google',
            code: 'Google Style 02-01',
            description: `
            <p><span class="glyphicon glyphicon-ok"></span> Do use consistent names for all symbols.<br /></p>
            <p><span class="glyphicon glyphicon-ok"></span> Do follow a pattern that describes the symbol's feature then its type. The recommended pattern is <code>feature.type.ts</code>.</p>
            `,
            reasons: [
                `Naming conventions help provide a consistent way to find content at a glance. Consistency within the project is vital. Consistency with a team is important. Consistency across a company provides tremendous efficiency.`,
                `The naming conventions should simply help find desired code faster and make it easier to understand.`,
                `Names of folders and files should clearly convey their intent. For example, app/heroes/hero-list.component.ts may contain a component that manages a list of heroes.`
            ]
        },
        { 
            title: 'File Naming Conventions',
            source: 'ae',
            code: 'AE Style 02-01',
            description: `
            <p><span class="glyphicon glyphicon-ok"></span> Do follow the recommended pattern that describes the symbol's feature then its type.</p>
            <p><span class="glyphicon glyphicon-ok"></span> Do select from one of the valid types listed in the table below.</p>
            <p><span class="glyphicon glyphicon-ok"></span> Do follow the recommended guidelines for the feature name.</p>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <!-- Default panel contents -->
                        <div class="panel-heading">List of Valid Types</div>
            
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Example</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>component</td>
                                    <td><code>feature.<b>component</b>.ts</code></td>
                                </tr>
                                <tr>
                                    <td>directive</td>
                                    <td><code>feature.<b>directive</b>.ts</code></td>
                                </tr>
                                <tr>
                                    <td>pipe</td>
                                    <td><code>feature.<b>pipe</b>.ts</code></td>
                                </tr>
                                <tr>
                                    <td>service</td>
                                    <td><code>feature.<b>service</b>.ts</code></td>
                                </tr>
                                <tr>
                                    <td>factory</td>
                                    <td><code>feature.<b>factory</b>.ts</code></td>
                                </tr>
                                <tr>
                                    <td>model</td>
                                    <td><code>feature.<b>model</b>.ts</code></td>
                                </tr>
            
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <!-- Default panel contents -->
                        <div class="panel-heading">Feature Naming Guidelines</div>
            
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Rule</th>
                                    <th>Example</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>All lowercase</td>
                                    <td><code><b>feature</b>.type.ts</code></td>
                                </tr>
                                <tr>
                                    <td>May contain dashes</td>
                                    <td><code><b>feature-list</b>.type.ts</code></td>
                                </tr>
                                <tr>
                                    <td>Avoid numbers, use string value instead</td>
                                    <td><code><b>feature-one</b>.type.ts</code></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            `,
            reasons: [
            ]
        },
        { 
            title: 'Separate file names with dots and dashes',
            source: 'google',
            code: 'Google Style 02-02',
            description: `
            <p><span class="glyphicon glyphicon-ok"></span> Do use dashes to separate words in the descriptive name.</p>
            <p><span class="glyphicon glyphicon-ok"></span> Do use dots to separate the descriptive name from the type.</p>
            <p><span class="glyphicon glyphicon-ok"></span> Do use consistent type names for all components following a pattern that describes the component's feature then its type. A recommended pattern is feature.type.ts.</p>
            <p><span class="glyphicon glyphicon-ok"></span> Do use conventional type names including .service, .component, .pipe, .module, and .directive. Invent additional type names if you must but take care not to create too many.</p>
            
            `,
            reasons: [
                'Type names provide a consistent way to quickly identify what is in the file.',
                'Type names make it easy to find a specific file type using an editor or IDE\'s fuzzy search techniques.',
                'Unabbreviated type names such as .service are descriptive and unambiguous. Abbreviations such as .srv, .svc, and .serv can be confusing.',
                'Type names provide pattern matching for any automated tasks.'
            ]
        },             
    ]
}
